name: CI

on:
  push:
    branches: [main, release/*]
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}

    # Run each command in parallel with the same setup steps.
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
        config:
          # Specify names so that the GitHub branch protection settings for
          # required checks don't need to change if we ever change the commands used.
          - name: lint
            command: |
              # lint steps
              set -x
              yarn license-check
              yarn dedupe --check
              yarn run tsc --noEmit # typecheck files that are not included by webpack or package builds
              yarn run lint:ci
              yarn run lint:unused-exports
              yarn run lint:dependencies
          - name: packages
            command: yarn run build:packages
          - name: web
            command: yarn run web:build:prod
          - name: build benchmark
            command: yarn run benchmark:build:prod
          - name: test
            command: yarn run test --maxWorkers=100%
        include:
          - os: windows-2019
            config:
              name: packages
              command: echo complete

    name: ${{ matrix.config.name }} (${{ matrix.os }})

    steps:
      - uses: actions/checkout@v4.1.1
        with:
          lfs: true

      - uses: actions/setup-node@v4.0.3
        with:
          node-version: 16.17
      - run: corepack enable yarn

      - name: Restore cache
        uses: actions/cache@v4.0.0
        with:
          path: |
            .yarn/cache
            **/node_modules
          key: v5-${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: v5-${{ runner.os }}-yarn-

      - run: yarn install --immutable

      - run: ${{ matrix.config.command }}

  integration:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]

    name: integration (${{ matrix.os }})

    steps:
      - uses: actions/checkout@v4.1.1
        with:
          lfs: true

      - uses: actions/setup-node@v4.0.3
        with:
          node-version: 16.17
      - run: corepack enable yarn

      - name: Restore cache
        uses: actions/cache@v4.0.0
        with:
          path: |
            .yarn/cache
            **/node_modules
          key: v5-${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: v5-${{ runner.os }}-yarn-

      - run: yarn install --immutable

      - name: test:integration
        if: matrix.os == 'ubuntu-20.04'
        uses: GabrielBB/xvfb-action@v1.6
        with:
          working-directory: ./
          run: yarn run test:integration

      - name: test:web-integration
        if: matrix.os == 'ubuntu-20.04'
        run: yarn run test:web-integration

      - name: test:integration
        if: matrix.os != 'ubuntu-20.04'
        run: yarn run test:integration
